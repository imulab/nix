ktor {
  deployment {
    port = 8080
    watch = [ nix ]
  }

  application {
    modules = [ io.imulab.nix.MainKt.nix ]
  }
}

nix {
  endpoint {
    issuer = "http://localhost:8080"
    jwks = "http://localhost:8080/nix.jwks"
    authorize = "http://localhost:8080/oauth/authorize"
    token = "http://localhost:8080/oauth/token"
    userinfo = "http://localhost:8080/userinfo"
    registration = "http://localhost:8080/client"
    login = "http://localhost:8081/login"
    consent = "http://localhost:8081/consent"
  }
  oauth {
    stateEntropy = 8
    scopes = ["openid"]
    responseTypes = [""]
  }
  oidc {
    nonceEntropy = 8
    acrValues = []
    subjectTypes = ["public", "pairwise"]
    responseModes = ["query", "fragment"]
    display = ["page"]
    serviceDoc = ""
    policyUri = ""
    uiLocales = []

  }
  security {
    tokenEndpointAuth {
      default = "client_secret_basic"
      supported = ["client_secret_post", "client_secret_basic", "client_secret_jwt", "private_key_jwt"]
      signatureAlgorithms = ["RS256"]
    }
    subjectSalt = "c2693a2e26a0438a965363d3ba5d12ec"
  }
  authorizeCode {
    expirationSeconds = 600
  }
  accessToken {
    expirationSeconds = 86400
  }
  refreshToken {
    expirationSeconds = 1209600
  }
  loginToken {
    expirationSeconds = 600
  }
  consentToken {
    expirationSeconds = 600
  }
  idToken {
    expirationSeconds = 86400
    signingAlgorithms = []
    encryptionAlgorithms = []
    encryptionEncodings = []
  }
  userInfo {
    signingAlgorithms = []
    encryptionAlgorithms = []
    encryptionEncodings = []
  }
  requestObject {
    signingAlgorithms = []
    encryptionAlgorithms = []
    encryptionEncodings = []
    supportRequestParameter = true
    supportRequestUriParameter = true
    requireRequestUriRegistration = true
  }
  claims {
    supported = true
    values = ["auth_time"]
    types = ["normal"]
    locales = []
  }
}